name: Build and Push Image
on:
  pull_request:
  push:
    branches:
      - main
      - live
  workflow_dispatch:

env:
  IMAGE_NAME: hypr-blue
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  FEDORA_MAJOR_VERSION: 42

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=Custom Fedora 42 Bazzite with Hyprland
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            ostree.bootable=true

      - name: Build Image
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.FEDORA_MAJOR_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: true
          build-args: |
            FEDORA_MAJOR_VERSION=${{ env.FEDORA_MAJOR_VERSION }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Image with retries
        env:
          IMAGE: ${{ steps.build.outputs.image }}
          TAGS: ${{ steps.build.outputs.tags }}
          REGISTRY: ${{ env.IMAGE_REGISTRY }}
        run: |
          set -e
          IFS=$'\n'
          for tag in $TAGS; do
            for attempt in {1..5}; do
              if podman push "$IMAGE:$tag" "$REGISTRY/$IMAGE:$tag"; then
                break
              fi
              echo "Retry $attempt for tag $tag failed, retrying..."
              sleep 15
            done
          done

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign Container Image
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: 0
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}